package Practise.mercuryTours;
// Generated by Selenium IDE
import org.junit.Assert;
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import static org.openqa.selenium.support.ui.ExpectedConditions.*;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;

import java.time.Duration;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;

public class loginTest {
    private WebDriver driver;
    private WebDriverWait wait;
    private Map<String, Object> vars;
    JavascriptExecutor js;

    private String elementNameName = "userName";
    private String elementNamePassword = "password";
    private String loginName = "tutorial";
    private String loginPassword = "tutorial";
    private String loginPasswordWrong = "wrong";

    @Before
    public void setUp() {
        System.setProperty("webdriver.gecko.driver", "webdrivers/geckodriver.exe");
        driver = new FirefoxDriver();
        wait = new WebDriverWait(driver, 1);
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
    }
    @After
    public void tearDown() {
        driver.quit();
    }

    @Test
    public void confirmByh3cssSelector() {
        String expected = "Login Successfully";
        String actual = "";
        driver.get("http://demo.guru99.com/test/newtours/");
        driver.findElement(By.name(elementNameName)).click();
        driver.findElement(By.name(elementNameName)).sendKeys(loginName);
        driver.findElement(By.name(elementNamePassword)).sendKeys(loginPassword);
        driver.findElement(By.name(elementNamePassword)).sendKeys(Keys.ENTER);
        try {
            wait.until(presenceOfElementLocated(By.cssSelector("h3")));
            actual = driver.findElement(By.cssSelector("h3")).getText();
        }
        //catch{}
        finally {
            Assert.assertEquals("user: " + loginName + " pw: " + loginPassword, expected, actual);
        }
    }

    @Test
    public void confirmByh3XPath() {
        String expected = "Login Successfully";
        String actual = "";
        driver.get("http://demo.guru99.com/test/newtours/");
        driver.findElement(By.name(elementNameName)).click();
        driver.findElement(By.name(elementNameName)).sendKeys(loginName);
        driver.findElement(By.name(elementNamePassword)).sendKeys(loginPassword);
        driver.findElement(By.name(elementNamePassword)).sendKeys(Keys.ENTER);
        try {
            wait.until(presenceOfElementLocated(By.xpath("//h3[normalize-space()='Login Successfully']")));
            actual = driver.findElement(By.xpath("//h3[normalize-space()='Login Successfully']")).getText();
        }
        //catch{}
        finally {
            Assert.assertEquals("user: " + loginName + " pw: " + loginPassword, expected, actual);
        }
    }

    @Test
    public void confirmFailureByh3XPath() {
        driver.get("http://demo.guru99.com/test/newtours/");
        driver.findElement(By.name(elementNameName)).click();
        driver.findElement(By.name(elementNameName)).sendKeys(loginName);
        driver.findElement(By.name(elementNamePassword)).sendKeys(loginPasswordWrong);
        driver.findElement(By.name(elementNamePassword)).sendKeys(Keys.ENTER);
        boolean timeOutCaught = false;
        try {
            wait.until(presenceOfElementLocated(By.xpath("//h3[normalize-space()='Login Successfully']")));
        }
        catch (org.openqa.selenium.TimeoutException e){
            timeOutCaught = true;
        }
        finally {
            Assert.assertTrue("wrong password didnt cause TimeoutException during test",timeOutCaught);
        }
    }
}